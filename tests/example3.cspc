# >>> def foo():
# ...     if 1 < 2: print 3
# >>> dis.dis(foo)
#   2           0 LOAD_CONST               1 (1)
#               3 LOAD_CONST               2 (2)
#               6 COMPARE_OP               0 (<)
#               9 POP_JUMP_IF_FALSE       20
#              12 LOAD_CONST               3 (3)
#              15 PRINT_ITEM          
#              16 PRINT_NEWLINE       
#              17 JUMP_FORWARD             0 (to 20)
#         >>   20 LOAD_CONST               0 (None)
#              23 RETURN_VALUE        

# Simple simulation of an if statement.
# if 1 < 2: print 100 else: print 200

DEF main
LOAD_CONST 1
LOAD_CONST 2
LT
# Remember, consts count towards the bytecode pc
POP_JUMP_IF_FALSE 12 
LOAD_CONST 100
PRINT_ITEM
# Remember, consts count towards the bytecode pc
JUMP_FORWARD 4
LOAD_CONST 200
PRINT_ITEM
RETURN 0
ENDDEF


# TEST_DATA
# expected = ProgramBox({ 'main' : CodeBox([OPCODES['LOAD_CONST'],
#                                           0,
#                                           OPCODES['LOAD_CONST'],
#                                           1,
#                                           OPCODES['LT'],  
#                                           OPCODES['POP_JUMP_IF_FALSE'],
#                                           2,
#                                           OPCODES['LOAD_CONST'],
#                                           3,
#                                           OPCODES['PRINT_ITEM'],
#                                           OPCODES['JUMP_FORWARD'],
#                                           4,
#                                           OPCODES['LOAD_CONST'],
#                                           5,
#                                           OPCODES['PRINT_ITEM'],
#                                           OPCODES['RETURN'],
#                                           6],
#                                          [],    # Strings
#                                          [1, 2, 12, 100, 4, 200, 0],
#                                          [])    # Bools
#                         }
#                       )
# expected_stack = [0]
# expected_heap = {}
#
# END_TEST_DATA
